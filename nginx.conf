# server {
#     listen 80;
#     server_name _; # match any hostname

#     location / {
#         return 301 https://$host$request_uri;
#     }
# }

server { #these are server blocks having lot of directives
    listen 443 ssl;
    server_name _; # match any hostname

    #self signed certificated using commands given in readme
    ssl_certificate /etc/nginx/ssl/certificate.crt;
    ssl_certificate_key /etc/nginx/ssl/private.key;

    # used to serve frontend page
    location / {
        proxy_pass http://meghasandesham-frontend:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    
    location ~ ^/user/(register|login|validate)$ { #identifies whether the url has /login or /register if so, call the proxy pass related URL
        proxy_pass http://authentication-service:3200;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_set_header Cookie $http_cookie;
        proxy_cookie_path / "/; Secure; HttpOnly; SameSite=None";
    }

    # location /user/validate {
    #     proxy_pass http://authentication-service:3200;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;

    #     proxy_set_header Cookie $http_cookie;
    #     proxy_cookie_path / "/; Secure; HttpOnly; SameSite=None";
    # }

    # For GET /user/<dynamic name>
    location ~ ^/user/[^/]+$ {
        proxy_pass http://app:3100;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_set_header Cookie $http_cookie;
        proxy_cookie_path / "/; Secure; HttpOnly; SameSite=None";
    }

    location /room {
        proxy_pass http://app:3100;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_set_header Cookie $http_cookie;
        proxy_cookie_path / "/; Secure; HttpOnly; SameSite=None";
    }

    location ^~ /socket.io/ {
        proxy_pass http://app:3100;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Authorization $http_authorization;
        # WebSocket specific timeouts
        proxy_read_timeout 86400s;  # Adjust timeout as needed
        proxy_send_timeout 86400s;
        
        # Buffering off to support WebSocket proxying
        proxy_buffering off;

        proxy_redirect off;
    }
}